aima:

stringify

The SPLIT-SEQUENCE code was based on Arthur Lemmens' in
http://groups.google.com/groups?as_umsgid=39F36F1A.B8F19D20%40simplex.nl

kroger:

transpose-list
unflatten
argv
mapcar2
maphash-keys
maphash-values
alist-to-hash
hash-to-plist
append1
empty-string-p
split-tabs
split-newline

The following functions, macros, and variables were derived from
arnesi:

+alphanumeric-ascii-alphabet+
+ascii-alphabet+
+base64-alphabet+
+lower-case-ascii-alphabet+
+upper-case-ascii-alphabet+
10
aand
acond2
acond
aif2
aif
and-bind
awhen
awhile
build-hash-table
but-head
but-tail
class-name-of
collect-timing
cond-bind
def-special-environment
defclass-struct
deflookup-table
defprint-object
divf
do-range
dolist*
dotree
encoding-keyword-to-native
ensure-list
eval-always
fold-strings
getenv
hash-table-keys
hash-table-values
hash-to-alist
head
if-bind
if2-bind
intern-concat
join-strings
let1
levenshtein-distance
list-match-case
make-collector
make-displaced-array
make-reducer
map-range
mulf
octets-to-string
parse-float
partitionx
partition
push*
quit
random-string
read-sequence*
rebinding
rebind
remf-keywords
remove-keywords
strcat*
strcat
string-from-array
string-to-octets
tail
until*
when-bind
while*
with-collectors
with-collector
with-reducer

The following functions, macros, and variables were derived from
alexandria:

alist-to-plist
appendf
array-index
array-length
binomial-coefficient
circular-list-p
circular-list
circular-list
circular-tree-p
clamp
coercef
compose
conjoin
copy-array
copy-file
copy-hash-table
copy-sequence
copy-stream
count-permutations
cswitch
curry
define-constant
delete-from-plistf
delete-from-plist
deletef
disjoin
doplist
emptyp
ends-with-subseq
ends-with
ensure-car
ensure-cons
ensure-function
ensure-gethash
ensure-symbol
eswitch
factorial
featurep
first-elt
flatten
format-symbol
gaussian-random
if-let
ignore-some-conditions
iota
last-elt
lastcar
lerp
make-circular-list
make-gensym-list
make-gensym
make-keyword
map-combinations
map-derangements
map-iota
map-permutations
map-product
mappend
maxf
mean
median
minf
multiple-value-compose
named-lambda
nconcf
negative-double-float-p
negative-double-float
negative-fixnum-p
negative-fixnum
negative-float-p
negative-float
negative-integer-p
negative-integer
negative-long-float-p
negative-long-float
negative-rational-p
negative-rational
negative-real-p
negative-real
negative-short-float-p
negative-short-float
negative-single-float-p
negative-single-float
non-negative-double-float-p
non-negative-double-float
non-negative-fixnum-p
non-negative-fixnum
non-negative-float-p
non-negative-float
non-negative-integer-p
non-negative-integer
non-negative-long-float-p
non-negative-long-float
non-negative-rational-p
non-negative-rational
non-negative-real-p
non-negative-real
non-negative-short-float-p
non-negative-short-float
non-negative-single-float-p
non-negative-single-float
non-positive-double-float-p
non-positive-double-float
non-positive-fixnum-p
non-positive-fixnum
non-positive-float-p
non-positive-float
non-positive-integer-p
non-positive-integer
non-positive-long-float-p
non-positive-long-float
non-positive-rational-p
non-positive-rational
non-positive-real-p
non-positive-real
non-positive-short-float-p
non-positive-short-float
non-positive-single-float-p
non-positive-single-float
nth-value-or
nunionf
of-type
once-only
parse-body
parse-ordinary-lambda-list
plist-to-alist
plist-to-hash
positive-double-float-p
positive-double-float
positive-fixnum-p
positive-fixnum
positive-float-p
positive-float
positive-integer-p
positive-integer
positive-long-float-p
positive-long-float
positive-rational-p
positive-rational
positive-real-p
positive-real
positive-short-float-p
positive-short-float
positive-single-float-p
positive-single-float
proper-list-p
proper-list
proper-sequence
random-elt
rcurry
read-file-into-string
remove-from-plistf
remove-from-plist
removef
required-argument
rotate
sequence-of-length-p
set-equal
setp
shuffle
simple-parse-error
simple-program-error
simple-reader-error
simple-style-warning
standard-deviation
starts-with-subseq
starts-with
string-designator
subfactorial
switch
symbolicate
unionf
unwind-protect-case
variance
when-let*
when-let
whichever
with-gensyms
with-unique-names
write-string-into-file
xor

* infix

;;; Copyright (c) 1993 by Mark Kantrowitz. All rights reserved.
;;;
;;; Use and copying of this software and preparation of derivative works
;;; based upon this software are permitted, so long as the following
;;; conditions are met:
;;;      o no fees or compensation are charged for use, copies, 
;;;        distribution or access to this software
;;;      o this copyright notice is included intact.
;;; This software is made available AS IS, and no warranty is made about
;;; the software or its performance.
;;;
;;; In no event will the author(s) or their institutions be liable to you for
;;; damages, including lost profits, lost monies, or other special, incidental
;;; or consequential damages, arising out of or in connection with the use or
;;; inability to use (including but not limited to loss of data or data being
;;; rendered inaccurate or losses sustained by third parties or a failure of
;;; the program to operate as documented) the program, or for any claim by
;;; any other party, whether in an action of contract, negligence, or 
;;; other tortious action.
;;;
;;; Please send bug reports, comments and suggestions to mkant@cs.cmu.edu.
