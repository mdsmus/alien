This is the README for ARCHIVE, a package for reading an writing
disk-based file archives such as those generated by the 'tar' and 'cpio'
programs on Unix.  This package aspires to be a pure Common Lisp
replacement for the 'tar' program.

Current functionality includes basic extraction from and creation of tar
archives.  Basic extraction from certain kinds of cpio archives is also
supported.

ASDF packaging is provided; (asdf:oos 'asdf:load-op :archive) should be
all you need to get started.  Once you have the system loaded, you can
try the following small example, which replicates the functionality of
'tar tf':

(in-package :archive)

(defun list-archive-entries (pathname)
  (with-open-archive (archive pathname :direction :input)
    (do-archive-entries (entry archive)
      (format t "~A~%" (name entry)))))

Access to the data for individual entries is also provided.  The
following example prints out the first line of every file in the archive
(assuming that the entry is a text file, of course):

(in-package :archive)

(defun list-archive-entries (pathname)
  (with-open-archive (archive pathname :direction :input)
    (do-archive-entries (entry archive)
      (let ((stream (entry-stream entry)))
        (format t "~A~%" (read-line stream))))))

Another thing to do is create archives:

(in-package :archive)

;;; This function is actually included in ARCHIVE.
(defun create-tar-file (pathname filelist)
  (with-open-archive (archive pathname :direction :output
                              :if-exists :supersede)
    (dolist (file filelist (finalize-archive archive))
      (let ((entry (create-tar-entry-from-pathname file)))
        (write-entry-to-archive archive entry)))))

Comments, criticisms, additions, and optimizations are welcome at the
below email address.

Nathan Froyd
froydnj@cs.rice.edu
12 January 2006
